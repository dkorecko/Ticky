@page
@model RegisterModel

<main class="auth-bg">
    <section class="auth-card">
        <div class="flex flex-col gap-1">
            <h1 class="text-3xl font-extrabold">Welcome!</h1>
            @if (Constants.SMTP_ENABLED)
            {
                <label class="opacity-40">Please provide some info for us to create an account for you</label>
            }
        </div>
        @if(Constants.SMTP_ENABLED) 
        {
            @using (Html.BeginForm(FormMethod.Post, true, new { @class = "auth-form" }))
            {
                <div class="auth-inp-label">
                    @Html.LabelFor(model => model.Input.DisplayName, new { @class = "auth-label" })
                    @Html.EditorFor(model => model.Input.DisplayName, new { htmlAttributes = new { @class = "auth-input" } })
                    @Html.ValidationMessageFor(model => model.Input.DisplayName)
                </div>
                <div class="auth-inp-label">
                    @Html.LabelFor(model => model.Input.Email, new { @class = "auth-label" })
                    @Html.EditorFor(model => model.Input.Email, new { htmlAttributes = new { @class = "auth-input" } })
                    @Html.ValidationMessageFor(model => model.Input.Email)
                </div>
                <div class="auth-inp-label">
                    @Html.LabelFor(model => model.Input.Password, new { @class = "auth-label" })
                    @Html.EditorFor(model => model.Input.Password, new { htmlAttributes = new { @class = "auth-input" } })
                    @Html.ValidationMessageFor(model => model.Input.Password)
                </div>
                <div class="auth-inp-label">
                    @Html.LabelFor(model => model.Input.ConfirmPassword, new { @class = "auth-label" })
                    @Html.EditorFor(model => model.Input.ConfirmPassword, new { htmlAttributes = new { @class = "auth-input" } })
                    @Html.ValidationMessageFor(model => model.Input.ConfirmPassword)
                </div>

                @Html.AntiForgeryToken()

                <button class="auth-button" type="submit">Create account</button>
                <div class="flex flex-row items-center justify-center gap-1">
                    <div class="text-auth-bottom-text text-xs font-normal">Already have an account?</div>
                    <a class="auth-link" href="/auth/login">Log in</a>
                </div>
            }
        } else
        {
            <div class="auth-form">
                <label class="auth-label">SMTP is not configured, please contact the administrator to create your account manually.</label>
                <div class="flex flex-row items-center justify-center gap-1">
                    <div class="text-auth-bottom-text text-xs font-normal">Already have an account?</div>
                    <a class="auth-link" href="/auth/login">Log in</a>
                </div>
            </div>
        }
    </section>
</main>